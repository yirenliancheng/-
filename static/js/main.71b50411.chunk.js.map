{"version":3,"sources":["components/shopInformation.js","components/machine.js","components/robat.js","components/yeild.js","whole/index.js","reportWebVitals.js","index.js"],"names":["ShopInformation","props","tick","newValues","value","i","push","state","values","Math","floor","random","length","setState","machineInformation","name","unit","this","ticker","setInterval","clearInterval","style","margin","className","width","height","map","item","index","React","PureComponent","Machine","bad","data","Single","toFixed","Robat","location","speed","pic","SingleMachine","Yeild","myChart","echarts","init","document","getElementById","xAxisData","yeildData","yeildPlanData","yeild","yeildPlan","day","moment","subtract","format","ratio","Number","console","log","option","title","text","textStyle","color","fontSize","legend","right","xAxis","type","axisLabel","interval","formatter","splitLine","show","axisLine","onZero","lineStyle","yAxis","position","abs","min","ceil","max","series","zlevel","barWidth","barMaxWidth","itemStyle","normal","barBorderRadius","borderWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","barGap","label","x","y","x2","y2","colorStops","offset","smooth","yAxisIndex","symbolSize","setOption","window","addEventListener","resize","initChart","id","Whole","time","Date","reverse","ClockCircleOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71b50411.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BorderBox13, Decoration6 } from '@jiaminghi/data-view-react';\r\nimport './index.css';\r\n\r\nexport default class ShopInformation extends React.PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            machineInformation: [\r\n                { name: '复合材料成品编织总长度', value: 5000, unit: 'mm' },\r\n                { name: '碳纤维总使用量', value: 3000, unit: 'mm' },\r\n                { name: '主电机速度', value: 0.16, unit: 'rad/s' },\r\n                { name: '编织机器人速度', value: 4, unit: 'mm/s' },\r\n                { name: '预成型件编织角', value: 45, unit: '°' }\r\n            ],\r\n            values: [5000, 3000, 0.16, 4, 45]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.ticker = setInterval(this.tick,5000);\r\n    }\r\n    \r\n    componentWillMount(){\r\n        clearInterval(this.ticker);\r\n    }\r\n\r\n    tick = () => {\r\n        var newValues = [];\r\n        var value = [\r\n            [0.14, 0.144, 0.146, 0.15, 0.152, 0.155, 0.156, 0.16, 0.162, 0.163, 0.166, 0.168, 0.171, 0.172, 0.175],\r\n            [3.2, 3.3, 3.4, 3.6, 3.8, 3.96, 4, 4.1, 4.12, 4.36, 4.53, 4.68, 4.69, 4.81, 4.91],\r\n            [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\r\n        ]\r\n        for(let i = 0; i < 5; i++){\r\n            if(i < 2){\r\n                newValues.push(this.state.values[i] + Math.floor(Math.random()*10));\r\n            } else{\r\n                newValues.push(value[i-2][Math.floor(Math.random()*(value[i-2].length))]);\r\n            }\r\n        }\r\n        this.setState({values: newValues})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <BorderBox13>\r\n                <div style={{margin: '20px 40px'}}> \r\n                    <span className='mac-title'>主要生产数据 </span>\r\n                    <Decoration6 style={{width: '300px', height: '30px'}} />\r\n                </div>\r\n                <div className='mac-info'>\r\n                   {\r\n                       this.state.machineInformation.map((item,index)=>{\r\n                           return (\r\n                               <div key={index} className='info'>\r\n                                   <span className='info-name'>{item.name}：</span>\r\n                                   <span className='info-value'>{this.state.values[index]}</span>\r\n                                   <span className='info-name'>{item.unit}</span>\r\n                               </div>\r\n                           )\r\n                       })\r\n                   }\r\n                </div>\r\n\r\n            </BorderBox13>\r\n        );   \r\n    }\r\n}","import React from 'react';\r\nimport { BorderBox9 , BorderBox6, Decoration9} from '@jiaminghi/data-view-react';\r\nimport './index.css';\r\n\r\nexport default class Machine extends React.PureComponent{\r\n    constructor(props){\r\n       super(props);\r\n       this.state = {\r\n           values: [\r\n               {name: '摇臂钻床',value: 36, bad: 1 },\r\n               {name: '钻铣床',value: 33, bad: 0 },\r\n               {name: '金属带锯床',value: 37, bad: 1 },\r\n               {name: '数控车床',value: 35, bad: 2 }\r\n           ]\r\n       };\r\n    }\r\n\r\n    render(){\r\n       return(\r\n           <BorderBox9>\r\n              {\r\n                  this.state.values.map((item,index) => {\r\n                    return <Single key={index} data={item}/>\r\n                  })\r\n              }\r\n           </BorderBox9>\r\n       );\r\n    }\r\n}\r\n\r\nclass Single extends React.PureComponent {\r\n    render(){\r\n       return(\r\n           <BorderBox6>\r\n              <div className='title'> {this.props.data.name} </div>\r\n              <div className='content'>\r\n                <div className='content-single'>\r\n                    <span className='info-name'>产量：</span>\r\n                    <span className='info-value'>{this.props.data.value}</span>\r\n                    <span className='info-name'>个</span>\r\n                </div>\r\n                <div className='content-single'>\r\n                    <span className='info-name'>次品数：</span>\r\n                    <span className='info-value'>{this.props.data.bad}</span>\r\n                    <span className='info-name'>个</span>\r\n                </div>\r\n              </div>\r\n              <div className='water'>\r\n                <Decoration9>\r\n                    <span>\r\n                       {(((this.props.data.value - this.props.data.bad)/this.props.data.value)*100).toFixed(2)}%\r\n                    </span>\r\n                </Decoration9>\r\n              </div>\r\n           </BorderBox6>\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport { BorderBox8, BorderBox7, Decoration3 } from '@jiaminghi/data-view-react';\r\nimport './index.css';\r\n\r\nexport default class Robat extends React.PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           values : [\r\n               {\r\n                   name: '四自由度机器人',\r\n                   location: 0.1,\r\n                   speed: 2\r\n               },\r\n               {\r\n                   name: '六自由度机器人',\r\n                   location: 0.1,\r\n                   speed: 2\r\n               }\r\n           ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var location = [0.08,0.09,0.095,0.098,0.1,0.105,0.11,0.114,0.12];\r\n        var speed = [1.8,1.85,1.86,1.92,1.96,1.98,2,2.08,2.1,2.11,2.15,2.18,2.2];\r\n        this.ticker = setInterval(() => {\r\n            this.setState({\r\n                values: [\r\n                    {\r\n                        name: '四自由度机器人',\r\n                        location: location[Math.floor(Math.random()*location.length)],\r\n                        speed: speed[Math.floor(Math.random()*speed.length)]\r\n                    },\r\n                    {\r\n                        name: '六自由度机器人',\r\n                        location: location[Math.floor(Math.random()*location.length)],\r\n                        speed: speed[Math.floor(Math.random()*speed.length)]\r\n                    }\r\n                ]\r\n            })\r\n        },5000);\r\n    }\r\n    \r\n    componentWillMount(){\r\n        clearInterval(this.ticker);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <BorderBox8>\r\n            {\r\n                this.state.values.map((item,index) => {\r\n                    return <SingleMachine\r\n                            key={index} \r\n                            name={item.name} \r\n                            pic={index}\r\n                            location={item.location}\r\n                            speed={item.speed}\r\n                            />\r\n                })\r\n            }\r\n          </BorderBox8>\r\n        )\r\n    }\r\n}\r\n\r\nclass SingleMachine extends React.PureComponent {\r\n    render(){\r\n        return(\r\n           <BorderBox7>\r\n              <div className='robat-content'>\r\n                  <div className='img'>\r\n                      <div className={this.props.pic === 0 ? 'img-src src1' : 'img-src src2'}></div>\r\n                      <div className='img-title'>{this.props.name}</div>\r\n                  </div>\r\n                  <div className='value'>\r\n                      <Decoration3 style={{width: '250px', height: '30px'}} />\r\n                      <div>\r\n                         <span className='info-name'>位置误差率：</span>\r\n                         <span className='info-value'>{this.props.location}%</span>\r\n                      </div>\r\n                      <div>\r\n                         <span className='info-name'>速度误差率：</span>\r\n                         <span className='info-value'>{this.props.speed}%</span>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n           </BorderBox7>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BorderBox10 } from '@jiaminghi/data-view-react';\r\nimport echarts from 'echarts';\r\nimport moment from 'moment';\r\nimport './index.css';\r\n\r\nexport default class Yeild extends React.PureComponent {\r\n\r\n    initChart(){\r\n        let myChart = echarts.init(document.getElementById('myYieldLine'));\r\n\r\n        //模拟数据生成\r\n        let xAxisData = [];\r\n        let yeildData = [];\r\n        let yeildPlanData = [];\r\n        for(let i = 14; i > 0; i--){\r\n            var yeild = Math.floor(Math.random()*4000+8000);\r\n            var yeildPlan = Math.floor(yeild/0.9);\r\n            var day = moment().subtract(i,'days').format('MM-DD');\r\n            xAxisData.push(day);\r\n            yeildData.push(yeild);\r\n            yeildPlanData.push(yeildPlan);\r\n        }\r\n        let ratio = [0.15];\r\n        for(let i = 1; i < 14; i++ ){\r\n            ratio.push(Number((1 - yeildData[i]/yeildData[i-1]).toFixed(2)));\r\n        }\r\n\r\n        console.log(xAxisData,yeildData,yeildPlanData,ratio);\r\n\r\n        let option = {\r\n            title: {\r\n                text: '复合材料成品历史产量',\r\n                textStyle:{\r\n                    color: 'rgb(21,149,233)',\r\n                    fontSize: 28\r\n                }\r\n            },\r\n            legend: {\r\n                right:'10%',\r\n                data: ['计划产量', '实际产量', '日产量环比变化'],\r\n                textStyle: {\r\n                    color: 'white'\r\n                }\r\n            },\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    axisLabel: {\r\n                        interval: 'auto',\r\n                        formatter: '{value}',\r\n                        margin: '10'\r\n                    },\r\n                    data: xAxisData,\r\n                    splitLine: { show: false },\r\n                    axisLine: {\r\n                        onZero: true,\r\n                        lineStyle: {\r\n                            color: 'white'\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    name: '产量',\r\n                    position: 'left',\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: 'white'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        formatter:(value) => {\r\n                            return `${Math.abs(value)}mm`\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    }\r\n                },\r\n                {\r\n                    type: 'value',\r\n                    name: '环比变化率',\r\n                    position: 'right',\r\n                    min: (value) => -Math.ceil(Math.max(Math.abs(value.min),Math.abs(value.max))),\r\n                    max: (value) => Math.ceil(Math.max(Math.abs(value.min),Math.abs(value.max))),\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: 'white'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        formatter:'{value}%'\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    }\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '计划产量',\r\n                    type: 'bar',\r\n                    zlevel: 1,\r\n                    barWidth: '50%',\r\n                    barMaxWidth: '20',\r\n                    itemStyle: {\r\n                      normal: {\r\n                        barBorderRadius: 30,\r\n                        color: 'rgba(57, 92, 254, 0.2)',\r\n                        borderWidth: 0,\r\n                        shadowBlur: {\r\n                          shadowColor: 'rgba(253, 191, 25, 0.1)',\r\n                          shadowBlur: 10,\r\n                          shadowOffsetX: 0,\r\n                          shadowOffsetY: 2,\r\n                        },\r\n                      }\r\n                    },\r\n                    data: yeildPlanData\r\n                },\r\n                { \r\n                    name: '实际产量',\r\n                    type: 'bar',\r\n                    zlevel: 2,\r\n                    barWidth: '50%',\r\n                    barGap: '-100%',\r\n                    barMaxWidth: '20',\r\n                    data: yeildData,\r\n                    label: {\r\n                        normal: {\r\n                            position: 'top',\r\n                            show: true,\r\n                            color: 'rgb(22, 231, 56)'\r\n                        }\r\n                    },\r\n                    itemStyle: {\r\n                      normal: {\r\n                        barBorderRadius: 30,\r\n                        color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [{\r\n                            offset: 0,\r\n                            color: 'rgba(22, 231, 56, 0.2)' \r\n                          }, {\r\n                            offset: 1,\r\n                            color: 'rgba(22, 231, 56, 1)' \r\n                          }]\r\n                        }\r\n                      }\r\n                    },\r\n                },\r\n                {\r\n                    name: '日产量环比变化',\r\n                    type: 'line',\r\n                    zlevel: 3,\r\n                    smooth: true,\r\n                    yAxisIndex: 1,\r\n                    symbolSize: 8,\r\n                    lineStyle: {\r\n                        width: 2\r\n                    },\r\n                    data: ratio\r\n                }\r\n            ]\r\n        }\r\n\r\n        myChart.setOption(option, true);\r\n        window.addEventListener(\"resize\", function () {\r\n            myChart.resize();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initChart();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <BorderBox10>\r\n              <div id='myYieldLine' className='yieldLine'></div>\r\n          </BorderBox10>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FullScreenContainer, BorderBox1, Decoration5, Decoration8 } from '@jiaminghi/data-view-react';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport ShopInformation from '../components/shopInformation.js';\r\nimport Machine from '../components/machine.js';\r\nimport Robat from '../components/robat';\r\nimport Yeild from '../components/yeild';\r\nimport moment from 'moment';\r\nimport './index.css';\r\n\r\nexport default class Whole extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: moment(new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.ticker = setInterval(this.tick,1000);\r\n    }\r\n    \r\n    componentWillMount(){\r\n        clearInterval(this.ticker);\r\n    }\r\n\r\n    tick = () => {\r\n        this.setState({\r\n          time: moment(new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FullScreenContainer className='datashow'>\r\n                <BorderBox1 className='border-1'>\r\n                    <div className='data-title'>\r\n                        <div className='title-style'>\r\n                            <Decoration5 className='title-decor'></Decoration5>\r\n                            <div className='title-flex'>\r\n                                <Decoration8 className='title-decoration' />\r\n                                <div className='title-font'>高倍智能装备有限公司1号车间远程运维界面</div>\r\n                                <Decoration8 reverse={true} className='title-decoration' />\r\n                            </div>\r\n                            {\r\n                                this.state.time &&\r\n                                <div className='title-time'>\r\n                                    <ClockCircleOutlined style={{ 'fontSize': '22px', 'marginRight': '20px' }} />\r\n                                    <span>当前时间：{this.state.time}</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='data-content'>\r\n                       <ShopInformation/>\r\n                       <Machine/>\r\n                       <Robat/>\r\n                       <Yeild/>\r\n                    </div>\r\n                </BorderBox1>\r\n            </FullScreenContainer>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Whole from './whole';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Whole/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}